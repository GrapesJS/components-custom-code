{"version":3,"sources":["webpack://grapesjs-custom-code/webpack/universalModuleDefinition","webpack://grapesjs-custom-code/webpack/bootstrap","webpack://grapesjs-custom-code/./src/config.js","webpack://grapesjs-custom-code/./src/index.js","webpack://grapesjs-custom-code/./src/components.js","webpack://grapesjs-custom-code/./src/blocks.js","webpack://grapesjs-custom-code/./src/commands.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keyCustomCode","typeCustomCode","commandNameCustomCode","editor","opts","arguments","length","undefined","options","blockLabel","blockCustomCode","propsCustomCode","placeholderContent","toolbarBtnCustomCode","placeholderScript","modalTitle","codeViewOptions","buttonLabel","commandCustomCode","_components2","default","_blocks2","_commands2","_config","dc","DomComponents","defaultType","getType","defaultModel","model","timedInterval","addType","extend","defaults","editable","init","this","listenTo","onCustomCodeChange","initialCode","components","toolbar","id","filter","tlb","unshift","_extends","command","label","isComponent","view","events","dblclick","onComponentsChange","_this","clearInterval","setTimeout","droppable","indexOf","el","innerHTML","set","onActive","target","em","run","bm","BlockManager","add","category","activate","select","content","type","cmd","Commands","appendToContent","HTMLElement","appendChild","insertAdjacentHTML","sender","getSelected","showCustomCode","stop","Modal","close","title","getContent","code","open","getModel","once","stopCommand","getCodeViewer","setContent","getPreContent","getPostContent","document","createElement","codeViewer","pfx","getConfig","className","getElement","getContentActions","refresh","focus","_this2","btn","onclick","handleSave","CodeManager","createViewer","codeName","theme","readOnly"],"mappings":"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","file":"dist/grapesjs-custom-code.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-custom-code\"] = factory();\n\telse\n\t\troot[\"grapesjs-custom-code\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const keyCustomCode = 'custom-code-plugin__code';\nconst typeCustomCode = 'custom-code';\nconst commandNameCustomCode = 'custom-code:open-modal';\n\nexport {\n  keyCustomCode,\n  typeCustomCode,\n  commandNameCustomCode,\n}\n","import loadComponents from './components';\nimport loadBlocks from './blocks';\nimport loadCommands from './commands';\n\nexport default (editor, opts = {}) => {\n  const options = { ...{\n    // Label of the custom code block\n    blockLabel: 'Custom Code',\n\n    // Object to extend the default custom code block, eg. { label: 'Custom Code', category: 'Extra', ... }.\n    // Pass a falsy value to avoid adding the block\n    blockCustomCode: {},\n\n    // Object to extend the default custom code properties, eg. `{ name: 'Custom Code', droppable: false, ... }`\n    propsCustomCode: {},\n\n    // Initial content of the custom code component\n    placeholderContent: '<span>Insert here your custom code</span>',\n\n    // Object to extend the default component's toolbar button for the code, eg. `{ label: '</>', attributes: { title: 'Open custom code' } }`\n    // Pass a falsy value to avoid adding the button\n    toolbarBtnCustomCode: {},\n\n    // Content to show when the custom code contains `<script>`\n    placeholderScript: `<div style=\"pointer-events: none; padding: 10px;\">\n      <svg viewBox=\"0 0 24 24\" style=\"height: 30px; vertical-align: middle;\">\n        <path d=\"M13 14h-2v-4h2m0 8h-2v-2h2M1 21h22L12 2 1 21z\"></path>\n        </svg>\n      Custom code with <i>&lt;script&gt;</i> can't be rendered on the canvas\n    </div>`,\n\n    // Title for the custom code modal\n    modalTitle: 'Insert your code',\n\n    // Additional options for the code viewer, eg. `{ theme: 'hopscotch', readOnly: 0 }`\n    codeViewOptions: {},\n\n    // Label for the default save button\n    buttonLabel: 'Save',\n\n    // Object to extend the default custom code command.\n    // Check the source to see all available methods\n    commandCustomCode: {},\n  },  ...opts };\n\n  // Add components\n  loadComponents(editor, options);\n\n  // Add blocks\n  loadBlocks(editor, options);\n\n  // Add commands\n  loadCommands(editor, options);\n};\n","import {\n  keyCustomCode,\n  commandNameCustomCode,\n  typeCustomCode,\n} from './config';\n\nexport default (editor, opts = {}) => {\n  const dc = editor.DomComponents;\n  const defaultType = dc.getType('default');\n  const defaultModel = defaultType.model;\n  const { toolbarBtnCustomCode } = opts;\n  let timedInterval;\n\n  dc.addType(typeCustomCode, {\n\n    model: defaultModel.extend({\n      defaults: {\n        ...defaultModel.prototype.defaults,\n        name: 'Custom Code',\n        editable: true,\n        ...opts.propsCustomCode,\n      },\n\n      /**\n       * Initilize the component\n       */\n      init() {\n        this.listenTo(this, `change:${keyCustomCode}`, this.onCustomCodeChange);\n        const initialCode = this.get(keyCustomCode) || opts.placeholderContent;\n        !this.components().length && this.components(initialCode);\n        const toolbar = this.get('toolbar');\n        const id = 'custom-code';\n\n        // Add the custom code toolbar button if requested and it's not already in\n        if (toolbarBtnCustomCode && !toolbar.filter(tlb => tlb.id === id ).length) {\n          toolbar.unshift({\n            id,\n            command: commandNameCustomCode,\n            label: `<svg viewBox=\"0 0 24 24\">\n              <path d=\"M14.6 16.6l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4m-5.2 0L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4z\"></path>\n            </svg>`,\n            ...toolbarBtnCustomCode\n          });\n        }\n      },\n\n      /**\n       * Callback to launch on keyCustomCode change\n       */\n      onCustomCodeChange() {\n        this.components(this.get(keyCustomCode));\n      },\n    }, {\n      /**\n       * The component can be used only if requested explicitly via `type` property\n       */\n      isComponent() {\n        return false;\n      }\n    }),\n\n    view: defaultType.view.extend({\n      events: {\n        dblclick: 'onActive',\n      },\n\n      init() {\n        this.listenTo(this.model.components(), 'add remove reset', this.onComponentsChange);\n        this.onComponentsChange();\n      },\n\n      /**\n       * Things to do once inner components of custom code are changed\n       */\n      onComponentsChange() {\n        timedInterval && clearInterval(timedInterval);\n        timedInterval = setTimeout(() => {\n          const { model } = this;\n          const content = model.get(keyCustomCode) || '';\n          let droppable = 1;\n\n          // Avoid rendering codes with scripts\n          if (content.indexOf('<script') >= 0) {\n            this.el.innerHTML = opts.placeholderScript;\n            droppable = 0;\n          }\n\n          model.set({ droppable });\n        }, 0);\n      },\n\n      onActive() {\n        const target = this.model;\n        this.em.get('Commands').run(commandNameCustomCode, { target });\n      },\n    })\n  });\n}\n","import {\n  typeCustomCode,\n} from './config';\n\nexport default (editor, opts = {}) => {\n  const bm = editor.BlockManager;\n  const { blockCustomCode, blockLabel } = opts;\n\n  blockCustomCode && bm.add(typeCustomCode, {\n    label: `<svg viewBox=\"0 0 24 24\">\n        <path d=\"M14.6 16.6l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4m-5.2 0L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4z\"></path>\n      </svg>\n      <div>${blockLabel}</div>`,\n    category: 'Extra',\n    activate: true,\n    select: true,\n    content: { type: typeCustomCode },\n    ...blockCustomCode\n  });\n}\n","import {\n  commandNameCustomCode,\n  keyCustomCode,\n} from './config';\n\nexport default (editor, opts = {}) => {\n  const cmd = editor.Commands;\n  const { modalTitle, codeViewOptions, commandCustomCode } = opts;\n  const appendToContent = (target, content) => {\n    if (content instanceof HTMLElement) {\n        target.appendChild(content);\n    } else if (content) {\n        target.insertAdjacentHTML('beforeend', content);\n    }\n  }\n\n  // Add the custom code command\n  cmd.add(commandNameCustomCode, {\n    keyCustomCode,\n\n    run(editor, sender, opts = {}) {\n      this.editor = editor;\n      this.options = opts;\n      this.target = opts.target || editor.getSelected();\n      const target = this.target;\n\n      if (target && target.get('editable')) {\n        this.showCustomCode(target);\n      }\n    },\n\n    stop(editor) {\n      editor.Modal.close();\n    },\n\n    /**\n     * Method which tells how to show the custom code\n     * @param  {Component} target\n     */\n    showCustomCode(target) {\n      const { editor, options } = this;\n      const title = options.title || modalTitle;\n      const content = this.getContent();\n      const code = target.get(keyCustomCode) || '';\n      editor.Modal\n        .open({ title, content })\n        .getModel()\n        .once('change:open', () => editor.stopCommand(this.id));\n      this.getCodeViewer().setContent(code);\n    },\n\n    /**\n     * Custom pre-content. Can be a simple string or an HTMLElement\n     */\n    getPreContent() {},\n\n    /**\n     * Custom post-content. Can be a simple string or an HTMLElement\n     */\n    getPostContent() {},\n\n    /**\n     * Get all the content for the custom code\n     * @return {HTMLElement}\n     */\n    getContent() {\n      const { editor } = this;\n      const content = document.createElement('div');\n      const codeViewer = this.getCodeViewer();\n      const pfx = editor.getConfig('stylePrefix');\n      content.className = `${pfx}custom-code`;\n      appendToContent(content, this.getPreContent());\n      content.appendChild(codeViewer.getElement());\n      appendToContent(content, this.getPostContent());\n      appendToContent(content, this.getContentActions());\n      codeViewer.refresh();\n      setTimeout(()=> codeViewer.focus(), 0);\n\n      return content;\n    },\n\n    /**\n     * Get the actions content. Can be a simple string or an HTMLElement\n     * @return {HTMLElement|String}\n     */\n    getContentActions() {\n      const { editor } = this;\n      const btn = document.createElement('button');\n      const pfx = editor.getConfig('stylePrefix');\n      btn.innerHTML = opts.buttonLabel;\n      btn.className = `${pfx}btn-prim ${pfx}btn-import__custom-code`;\n      btn.onclick = () => this.handleSave();\n\n      return btn;\n    },\n\n    /**\n     * Handle the main save task\n     */\n    handleSave() {\n      const { editor, target } = this;\n      const code = this.getCodeViewer().getContent();\n      target.set(keyCustomCode, code);\n      editor.Modal.close();\n    },\n\n    /**\n     * Return the code viewer instance\n     * @return {CodeViewer}\n     */\n    getCodeViewer() {\n      const { editor } = this;\n\n      if (!this.codeViewer) {\n        this.codeViewer = editor.CodeManager.createViewer({\n          codeName: 'htmlmixed',\n          theme: 'hopscotch',\n          readOnly: 0,\n          ...codeViewOptions,\n        });\n      }\n\n      return this.codeViewer;\n    },\n\n    ...commandCustomCode,\n  });\n};\n"],"sourceRoot":""}